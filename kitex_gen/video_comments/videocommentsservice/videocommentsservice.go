// Code generated by Kitex v0.3.1. DO NOT EDIT.

package videocommentsservice

import (
	"context"
	"douyin/v1/kitex_gen/video_comments"
	"github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return videoCommentsServiceServiceInfo
}

var videoCommentsServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "VideoCommentsService"
	handlerType := (*video_comments.VideoCommentsService)(nil)
	methods := map[string]kitex.MethodInfo{
		"GetPublishVideoCommentByVideo": kitex.NewMethodInfo(getPublishVideoCommentByVideoHandler, newVideoCommentsServiceGetPublishVideoCommentByVideoArgs, newVideoCommentsServiceGetPublishVideoCommentByVideoResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "video_comments",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.3.1",
		Extra:           extra,
	}
	return svcInfo
}

func getPublishVideoCommentByVideoHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*video_comments.VideoCommentsServiceGetPublishVideoCommentByVideoArgs)
	realResult := result.(*video_comments.VideoCommentsServiceGetPublishVideoCommentByVideoResult)
	success, err := handler.(video_comments.VideoCommentsService).GetPublishVideoCommentByVideo(ctx, realArg.VideoId)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newVideoCommentsServiceGetPublishVideoCommentByVideoArgs() interface{} {
	return video_comments.NewVideoCommentsServiceGetPublishVideoCommentByVideoArgs()
}

func newVideoCommentsServiceGetPublishVideoCommentByVideoResult() interface{} {
	return video_comments.NewVideoCommentsServiceGetPublishVideoCommentByVideoResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) GetPublishVideoCommentByVideo(ctx context.Context, videoId int64) (r *video_comments.PublishVideoCommentResponse, err error) {
	var _args video_comments.VideoCommentsServiceGetPublishVideoCommentByVideoArgs
	_args.VideoId = videoId
	var _result video_comments.VideoCommentsServiceGetPublishVideoCommentByVideoResult
	if err = p.c.Call(ctx, "GetPublishVideoCommentByVideo", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
