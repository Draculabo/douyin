// Code generated by Kitex v0.3.1. DO NOT EDIT.

package commentactionservice

import (
	"context"
	"douyin/v1/kitex_gen/comment_action"
	"github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return commentActionServiceServiceInfo
}

var commentActionServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "CommentActionService"
	handlerType := (*comment_action.CommentActionService)(nil)
	methods := map[string]kitex.MethodInfo{
		"PostCommentActionResponse": kitex.NewMethodInfo(postCommentActionResponseHandler, newCommentActionServicePostCommentActionResponseArgs, newCommentActionServicePostCommentActionResponseResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "comment_action",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.3.1",
		Extra:           extra,
	}
	return svcInfo
}

func postCommentActionResponseHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*comment_action.CommentActionServicePostCommentActionResponseArgs)
	realResult := result.(*comment_action.CommentActionServicePostCommentActionResponseResult)
	success, err := handler.(comment_action.CommentActionService).PostCommentActionResponse(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newCommentActionServicePostCommentActionResponseArgs() interface{} {
	return comment_action.NewCommentActionServicePostCommentActionResponseArgs()
}

func newCommentActionServicePostCommentActionResponseResult() interface{} {
	return comment_action.NewCommentActionServicePostCommentActionResponseResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) PostCommentActionResponse(ctx context.Context, req *comment_action.Comment_Action) (r *comment_action.CommentActionResponse, err error) {
	var _args comment_action.CommentActionServicePostCommentActionResponseArgs
	_args.Req = req
	var _result comment_action.CommentActionServicePostCommentActionResponseResult
	if err = p.c.Call(ctx, "PostCommentActionResponse", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
